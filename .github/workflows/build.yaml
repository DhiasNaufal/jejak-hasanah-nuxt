name: Generate a build and push to another branch

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Push

    steps:
      - name: git-checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install all dependencies
        run: npm install

      - name: Build
        run: npm run build # The build command of your project

      - name: Verify build output
        run: ls -la .nuxt

      - name: Install lftp
        run: sudo apt-get install lftp

      - name: Verify secrets
        run: |
          echo "FTP_SERVER: ${{ secrets.FTP_SERVER }}"
          echo "FTP_USER: ${{ secrets.FTP_USER }}"
          echo "FTP_PASS: ${{ secrets.FTP_PASS }}"
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USER: ${{ secrets.FTP_USER }}
          FTP_PASS: ${{ secrets.FTP_PASS }}

      - name: Deploy to production
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USER: ${{ secrets.FTP_USER }}
          FTP_PASS: ${{ secrets.FTP_PASS }}
        run: |
          lftp -c "open -u $FTP_USER,$FTP_PASS $FTP_SERVER; mirror -R .nuxt /public_html/"

      - name: Verify deployment
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USER: ${{ secrets.FTP_USER }}
          FTP_PASS: ${{ secrets.FTP_PASS }}
        run: |
          lftp -c "open -u $FTP_USER,$FTP_PASS $FTP_SERVER; ls /public_html/"

      # - name: Deploy to Hostinger
      #   uses: SamKirkland/FTP-Deploy-Action@4.0.0
      #   with:
      #     server: ${{ secrets.FTP_SERVER }}
      #     username: ${{ secrets.FTP_USER }}
      #     password: ${{ secrets.FTP_PASS }}
      #     remote-dir: public_html/
      #     local-dir: .nuxt

      # - name: Deploy to production
      #   env:
      #     FTP_SERVER: ${{ secrets.FTP_SERVER }}
      #     FTP_USER: ${{ secrets.FTP_USER }}
      #     FTP_PASS: ${{ secrets.FTP_PASS }}
      #   run: |
      #     lftp -c "open -u $FTP_USER,$FTP_PASS $FTP_SERVER; mirror -R .nuxt /public_html/"

      # - name: Verify deployment
      #   env:
      #     FTP_SERVER: ${{ secrets.FTP_SERVER }}
      #     FTP_USER: ${{ secrets.FTP_USER }}
      #     FTP_PASS: ${{ secrets.FTP_PASS }}
      #   run: |
      #     lftp -c "open -u $FTP_USER,$FTP_PASS $FTP_SERVER; ls /public_html/"

      # - name: Verify build output
      #   run: ls -la .nuxt/dist

      # - name: Push
      #   uses: s0/git-publish-subdir-action@develop
      #   env:
      #     REPO: self
      #     BRANCH: build
      #     FOLDER: .nuxt/dist # The directory where your assets are generated
      #     GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
      #     MESSAGE: "Build: ({sha}) {msg}" # The commit message
